name: Deploy Infrastructure and Application

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      # Next.js Build
      - name: Install Root Dependencies
        run: npm ci
      
      - name: Build Next.js
        run: npm run build
        env:
          SKIP_ENV_VALIDATION: true  # Add if you use t3-env or similar
      
      - name: Package Application
        run: |
          zip -r deploy.zip .next package.json package-lock.json public app pages next.config.js

      # AWS Setup
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2
      
      # CDK Deploy
      - name: CDK Setup
        working-directory: cipher-infra
        run: |
          # Ensure the directory exists
          [ -d "node_modules" ] || mkdir node_modules
          # Install dependencies from package.json
          npm ci
          # Install CDK globally
          npm install -g aws-cdk
          
      - name: CDK Bootstrap
        working-directory: cipher-infra
        run: |
          # Add error handling for bootstrap
          cdk bootstrap || {
            echo "Bootstrap failed. Checking AWS credentials and permissions..."
            aws sts get-caller-identity
            exit 1
          }
        
      - name: Deploy Infrastructure
        working-directory: cipher-infra
        run: |
          # Add error handling and logging
          cdk deploy --require-approval never --outputs-file outputs.json || {
            echo "Deploy failed. Checking stack status..."
            cdk list
            exit 1
          }
          
      - name: Upload to S3
        run: |
          if [ ! -f cipher-infra/outputs.json ]; then
            echo "outputs.json not found!"
            exit 1
          fi
          BUCKET_NAME=$(jq -r '.CipherInfraStack.DeploymentBucketName' cipher-infra/outputs.json)
          if [ -z "$BUCKET_NAME" ]; then
            echo "Bucket name not found in outputs.json!"
            cat cipher-infra/outputs.json
            exit 1
          fi
          aws s3 cp deploy.zip "s3://${BUCKET_NAME}/deploy.zip"